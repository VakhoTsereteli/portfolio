{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"vc-alpha\"\n};\nconst _hoisted_2 = {\n  class: \"vc-alpha-checkboard-wrap\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"vc-alpha-picker\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_checkboard = _resolveComponent(\"checkboard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_checkboard)]), _createElementVNode(\"div\", {\n    class: \"vc-alpha-gradient\",\n    style: _normalizeStyle({\n      background: $options.gradientColor\n    })\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"vc-alpha-container\",\n    ref: \"container\",\n    onMousedown: _cache[0] || (_cache[0] = (...args) => $options.handleMouseDown && $options.handleMouseDown(...args)),\n    onTouchmove: _cache[1] || (_cache[1] = (...args) => $options.handleChange && $options.handleChange(...args)),\n    onTouchstart: _cache[2] || (_cache[2] = (...args) => $options.handleChange && $options.handleChange(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"vc-alpha-pointer\",\n    style: _normalizeStyle({\n      left: $options.colors.a * 100 + '%'\n    })\n  }, _hoisted_4, 4 /* STYLE */)], 544 /* HYDRATE_EVENTS, NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_checkboard","style","_normalizeStyle","background","$options","gradientColor","ref","onMousedown","_cache","args","handleMouseDown","onTouchmove","handleChange","onTouchstart","left","colors","a"],"sources":["/home/vakho_tsereteli/portfolio/node_modules/vue-color/src/components/common/Alpha.vue"],"sourcesContent":["<template>\n  <div class=\"vc-alpha\">\n    <div class=\"vc-alpha-checkboard-wrap\">\n      <checkboard></checkboard>\n    </div>\n    <div class=\"vc-alpha-gradient\" :style=\"{background: gradientColor}\"></div>\n    <div class=\"vc-alpha-container\" ref=\"container\"\n        @mousedown=\"handleMouseDown\"\n        @touchmove=\"handleChange\"\n        @touchstart=\"handleChange\">\n      <div class=\"vc-alpha-pointer\" :style=\"{left: colors.a * 100 + '%'}\">\n        <div class=\"vc-alpha-picker\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport checkboard from './Checkboard.vue'\n\nexport default {\n  name: 'Alpha',\n  props: {\n    value: Object,\n    onChange: Function\n  },\n  components: {\n    checkboard\n  },\n  computed: {\n    colors () {\n      return this.value\n    },\n    gradientColor () {\n      var rgba = this.colors.rgba\n      var rgbStr = [rgba.r, rgba.g, rgba.b].join(',')\n      return 'linear-gradient(to right, rgba(' + rgbStr + ', 0) 0%, rgba(' + rgbStr + ', 1) 100%)'\n    }\n  },\n  methods: {\n    handleChange (e, skip) {\n      !skip && e.preventDefault()\n      var container = this.$refs.container\n      if (!container) {\n        // for some edge cases, container may not exist. see #220\n        return\n      }\n      var containerWidth = container.clientWidth\n\n      var xOffset = container.getBoundingClientRect().left + window.pageXOffset\n      var pageX = e.pageX || (e.touches ? e.touches[0].pageX : 0)\n      var left = pageX - xOffset\n\n      var a\n      if (left < 0) {\n        a = 0\n      } else if (left > containerWidth) {\n        a = 1\n      } else {\n        a = Math.round(left * 100 / containerWidth) / 100\n      }\n\n      if (this.colors.a !== a) {\n        this.$emit('change', {\n          h: this.colors.hsl.h,\n          s: this.colors.hsl.s,\n          l: this.colors.hsl.l,\n          a: a,\n          source: 'rgba'\n        })\n      }\n    },\n    handleMouseDown (e) {\n      this.handleChange(e, true)\n      window.addEventListener('mousemove', this.handleChange)\n      window.addEventListener('mouseup', this.handleMouseUp)\n    },\n    handleMouseUp () {\n      this.unbindEventListeners()\n    },\n    unbindEventListeners () {\n      window.removeEventListener('mousemove', this.handleChange)\n      window.removeEventListener('mouseup', this.handleMouseUp)\n    }\n  }\n}\n\n</script>\n\n<style>\n.vc-alpha {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n}\n.vc-alpha-checkboard-wrap {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  overflow: hidden;\n}\n.vc-alpha-gradient {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n}\n.vc-alpha-container {\n  cursor: pointer;\n  position: relative;\n  z-index: 2;\n  height: 100%;\n  margin: 0 3px;\n}\n.vc-alpha-pointer {\n  z-index: 2;\n  position: absolute;\n}\n.vc-alpha-picker {\n  cursor: pointer;\n  width: 4px;\n  border-radius: 1px;\n  height: 8px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n  background: #fff;\n  margin-top: 1px;\n  transform: translateX(-2px);\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAA0B;gCASjCC,mBAAA,CAAmC;EAA9BD,KAAK,EAAC;AAAiB;oBAA5BE,UAAmC,C;;;uBAVzCC,mBAAA,CAaM,OAbNC,UAaM,GAZJH,mBAAA,CAEM,OAFNI,UAEM,GADJC,YAAA,CAAyBC,qBAAA,E,GAE3BN,mBAAA,CAA0E;IAArED,KAAK,EAAC,mBAAmB;IAAEQ,KAAK,EAAAC,eAAA;MAAAC,UAAA,EAAeC,QAAA,CAAAC;IAAa;2BACjEX,mBAAA,CAOM;IAPDD,KAAK,EAAC,oBAAoB;IAACa,GAAG,EAAC,WAAW;IAC1CC,WAAS,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,QAAA,CAAAM,eAAA,IAAAN,QAAA,CAAAM,eAAA,IAAAD,IAAA,CAAe;IAC1BE,WAAS,EAAAH,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,QAAA,CAAAQ,YAAA,IAAAR,QAAA,CAAAQ,YAAA,IAAAH,IAAA,CAAY;IACvBI,YAAU,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,QAAA,CAAAQ,YAAA,IAAAR,QAAA,CAAAQ,YAAA,IAAAH,IAAA,CAAY;MAC3Bf,mBAAA,CAEM;IAFDD,KAAK,EAAC,kBAAkB;IAAEQ,KAAK,EAAAC,eAAA;MAAAY,IAAA,EAASV,QAAA,CAAAW,MAAM,CAACC,CAAC;IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}