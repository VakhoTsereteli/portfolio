{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"vc-checkerboard\",\n    style: _normalizeStyle($options.bgStyle)\n  }, null, 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementBlock","class","style","_normalizeStyle","$options","bgStyle"],"sources":["/home/vakho_tsereteli/portfolio/node_modules/vue-color/src/components/common/Checkboard.vue"],"sourcesContent":["<template>\n  <div class=\"vc-checkerboard\" :style=\"bgStyle\"></div>\n</template>\n\n<script>\nlet _checkboardCache = {}\n\nexport default {\n  name: 'Checkboard',\n  props: {\n    size: {\n      type: [Number, String],\n      default: 8\n    },\n    white: {\n      type: String,\n      default: '#fff'\n    },\n    grey: {\n      type: String,\n      default: '#e6e6e6'\n    }\n  },\n  computed: {\n    bgStyle () {\n      return {\n        'background-image': 'url(' + getCheckboard(this.white, this.grey, this.size) + ')'\n      }\n    }\n  }\n}\n\n/**\n * get base 64 data by canvas\n *\n * @param {String} c1 hex color\n * @param {String} c2 hex color\n * @param {Number} size\n */\n\nfunction renderCheckboard (c1, c2, size) {\n  // Dont Render On Server\n  if (typeof document === 'undefined') {\n    return null\n  }\n  var canvas = document.createElement('canvas')\n  canvas.width = canvas.height = size * 2\n  var ctx = canvas.getContext('2d')\n  // If no context can be found, return early.\n  if (!ctx) {\n    return null\n  }\n  ctx.fillStyle = c1\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n  ctx.fillStyle = c2\n  ctx.fillRect(0, 0, size, size)\n  ctx.translate(size, size)\n  ctx.fillRect(0, 0, size, size)\n  return canvas.toDataURL()\n}\n\n/**\n * get checkboard base data and cache\n *\n * @param {String} c1 hex color\n * @param {String} c2 hex color\n * @param {Number} size\n */\n\nfunction getCheckboard (c1, c2, size) {\n  var key = c1 + ',' + c2 + ',' + size\n\n  if (_checkboardCache[key]) {\n    return _checkboardCache[key]\n  } else {\n    var checkboard = renderCheckboard(c1, c2, size)\n    _checkboardCache[key] = checkboard\n    return checkboard\n  }\n}\n\n</script>\n\n<style>\n.vc-checkerboard {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  background-size: contain;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAAoD;IAA/CC,KAAK,EAAC,iBAAiB;IAAEC,KAAK,EAAAC,eAAA,CAAEC,QAAA,CAAAC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}